<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RERERERERERERERERERERERERERERERERERERIrl/wMnAb3PsNW/vgAAAABJRU5ErkJggg==
</value>
  </data>
</root>